# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CareerInterests.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QCursor
from PyQt5.QtWidgets import QMenu, QAction, QMessageBox


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(786, 646)
        MainWindow.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedKingdom))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(15, 80, 761, 521))
        self.textBrowser.setStyleSheet("background-color:rgb(174, 194, 221)")
        self.textBrowser.setObjectName("textBrowser")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(30, 160, 731, 421))
        self.graphicsView.setObjectName("graphicsView")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(10, 0, 771, 71))
        self.frame.setStyleSheet("background-color:rgb(174, 194, 221)")
        self.frame.setObjectName("frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self.frame)
        self.pushButton.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.frame)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.frame)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout.addWidget(self.pushButton_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.frame)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout.addWidget(self.pushButton_4)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(40, 170, 711, 361))
        self.tabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget.setAutoFillBackground(True)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setIconSize(QtCore.QSize(16, 16))
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setObjectName("tabWidget")
        self.Employers = QtWidgets.QWidget()
        self.Employers.setObjectName("Employers")
        self.edit_emp = QtWidgets.QLineEdit(self.Employers)
        self.edit_emp.setGeometry(QtCore.QRect(10, 10, 191, 31))
        self.edit_emp.setObjectName("edit_emp")
        self.add_emp = QtWidgets.QPushButton(self.Employers)
        self.add_emp.setGeometry(QtCore.QRect(210, 10, 121, 31))
        self.add_emp.setObjectName("add_emp")
        self.list_emp = QtWidgets.QListWidget(self.Employers)
        self.list_emp.setGeometry(QtCore.QRect(10, 50, 691, 281))
        self.list_emp.setObjectName("list_emp")
        self.tabWidget.addTab(self.Employers, "")
        self.Sectors = QtWidgets.QWidget()
        self.Sectors.setObjectName("Sectors")
        self.edit_sec = QtWidgets.QLineEdit(self.Sectors)
        self.edit_sec.setGeometry(QtCore.QRect(10, 10, 191, 31))
        self.edit_sec.setObjectName("edit_sec")
        self.add_sec = QtWidgets.QPushButton(self.Sectors)
        self.add_sec.setGeometry(QtCore.QRect(210, 10, 121, 31))
        self.add_sec.setObjectName("add_sec")
        self.list_sec = QtWidgets.QListWidget(self.Sectors)
        self.list_sec.setGeometry(QtCore.QRect(10, 50, 691, 281))
        self.list_sec.setObjectName("list_sec")
        self.tabWidget.addTab(self.Sectors, "")
        self.Jobtypes = QtWidgets.QWidget()
        self.Jobtypes.setObjectName("Jobtypes")
        self.add_job = QtWidgets.QPushButton(self.Jobtypes)
        self.add_job.setGeometry(QtCore.QRect(210, 10, 121, 31))
        self.add_job.setObjectName("add_job")
        self.edit_job = QtWidgets.QLineEdit(self.Jobtypes)
        self.edit_job.setGeometry(QtCore.QRect(10, 10, 191, 31))
        self.edit_job.setObjectName("edit_job")
        self.list_job = QtWidgets.QListWidget(self.Jobtypes)
        self.list_job.setGeometry(QtCore.QRect(10, 50, 691, 281))
        self.list_job.setObjectName("list_job")
        self.tabWidget.addTab(self.Jobtypes, "")
        self.Interestareas = QtWidgets.QWidget()
        self.Interestareas.setObjectName("Interestareas")
        self.add_int = QtWidgets.QPushButton(self.Interestareas)
        self.add_int.setGeometry(QtCore.QRect(210, 10, 121, 31))
        self.add_int.setObjectName("add_int")
        self.edit_int = QtWidgets.QLineEdit(self.Interestareas)
        self.edit_int.setGeometry(QtCore.QRect(10, 10, 191, 31))
        self.edit_int.setObjectName("edit_int")
        self.list_int = QtWidgets.QListWidget(self.Interestareas)
        self.list_int.setGeometry(QtCore.QRect(10, 50, 691, 281))
        self.list_int.setObjectName("list_int")
        self.tabWidget.addTab(self.Interestareas, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 786, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)

        self.add_emp.clicked.connect(self.add_list_emp)
        self.list_emp.setContextMenuPolicy(Qt.CustomContextMenu)
        self.list_emp.contextMenuPolicy()
        self.list_emp.customContextMenuRequested[QtCore.QPoint].connect(self.list_emp_rightMenuShow)

        self.add_sec.clicked.connect(self.add_list_sec)
        self.list_sec.setContextMenuPolicy(Qt.CustomContextMenu)
        self.list_sec.contextMenuPolicy()
        self.list_sec.customContextMenuRequested[QtCore.QPoint].connect(self.list_sec_rightMenuShow)

        self.add_job.clicked.connect(self.add_list_job)
        self.list_job.setContextMenuPolicy(Qt.CustomContextMenu)
        self.list_job.contextMenuPolicy()
        self.list_job.customContextMenuRequested[QtCore.QPoint].connect(self.list_job_rightMenuShow)

        self.add_int.clicked.connect(self.add_list_int)
        self.list_int.setContextMenuPolicy(Qt.CustomContextMenu)
        self.list_int.contextMenuPolicy()
        self.list_int.customContextMenuRequested[QtCore.QPoint].connect(self.list_int_rightMenuShow)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def add_list_emp(self):
        text = self.edit_emp.text()
        if len(text) > 0:
            self.list_emp.addItem(text)
        else:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', 'empty!')
            msg_box.exec_()

    def list_emp_rightMenuShow(self, point):
        def DeleteItem():
            print(self.list_emp.currentRow())
            a = self.list_emp.takeItem(self.list_emp.currentRow())
            print(a)

        if self.list_emp.currentRow() >= 0:
            menu = QMenu()
            delAct = QAction("Delete")
            delAct.triggered.connect(DeleteItem)
            menu.addAction(delAct)
            menu.exec_(QCursor.pos())

    def add_list_sec(self):
        text = self.edit_sec.text()
        if len(text) > 0:
            self.list_sec.addItem(text)
        else:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', 'empty!')
            msg_box.exec_()

    def list_sec_rightMenuShow(self, point):
        def DeleteItem():
            print(self.list_sec.currentRow())
            a = self.list_sec.takeItem(self.list_sec.currentRow())
            print(a)

        if self.list_sec.currentRow() >= 0:
            menu = QMenu()
            delAct = QAction("Delete")
            delAct.triggered.connect(DeleteItem)
            menu.addAction(delAct)
            menu.exec_(QCursor.pos())

    def add_list_job(self):
        text = self.edit_job.text()
        if len(text) > 0:
            self.list_job.addItem(text)
        else:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', 'empty!')
            msg_box.exec_()

    def list_job_rightMenuShow(self, point):
        def DeleteItem():
            print(self.list_job.currentRow())
            a = self.list_job.takeItem(self.list_job.currentRow())
            print(a)

        if self.list_job.currentRow() >= 0:
            menu = QMenu()
            delAct = QAction("Delete")
            delAct.triggered.connect(DeleteItem)
            menu.addAction(delAct)
            menu.exec_(QCursor.pos())

    def add_list_int(self):
        text = self.edit_int.text()
        if len(text) > 0:
            self.list_int.addItem(text)
        else:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', 'empty!')
            msg_box.exec_()

    def list_int_rightMenuShow(self, point):
        def DeleteItem():
            print(self.list_int.currentRow())
            a = self.list_int.takeItem(self.list_int.currentRow())
            print(a)

        if self.list_int.currentRow() >= 0:
            menu = QMenu()
            delAct = QAction("Delete")
            delAct.triggered.connect(DeleteItem)
            menu.addAction(delAct)
            menu.exec_(QCursor.pos())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'.SF NS Text\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
                                            "<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\'; font-size:48pt; font-weight:600; vertical-align:sub;\">Career Interests</span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "Profile"))
        self.pushButton_2.setText(_translate("MainWindow", "Applications"))
        self.pushButton_3.setText(_translate("MainWindow", "Career Interests"))
        self.pushButton_4.setText(_translate("MainWindow", "Learn More"))
        self.add_emp.setText(_translate("MainWindow", "Add"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Employers), _translate("MainWindow", "Employers"))
        self.add_sec.setText(_translate("MainWindow", "Add"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Sectors), _translate("MainWindow", "Sectors"))
        self.add_job.setText(_translate("MainWindow", "Add"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Jobtypes), _translate("MainWindow", "Job types"))
        self.add_int.setText(_translate("MainWindow", "Add"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Interestareas),
                                  _translate("MainWindow", "Interest Areas"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
