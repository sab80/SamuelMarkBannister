from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIntValidator, QCursor, QColor
from PyQt5.QtCore import QDate, QTime, QDateTime, Qt
from PyQt5.QtWidgets import QMenu, QAction, QMessageBox
import dbConnection
import datetime

db_file = "applications.db"

name, address, country, linkedIn, email, phone_number, skillsChecked, education, experience = "", "", "", "", "", "", [], "", ""
date_of_birth = QDate.currentDate()
boolList = []


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1364, 876)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(-280, 680, 135, 80))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setEnabled(False)
        self.tab.setObjectName("tab")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget_2.setGeometry(QtCore.QRect(70, 20, 1151, 741))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget_2.setFont(font)
        self.tabWidget_2.setStyleSheet("QTabBar::tab { background-color: rgb(174, 194, 221)}")
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.ProfileFrame = QtWidgets.QFrame(self.tab_3)
        self.ProfileFrame.setGeometry(QtCore.QRect(10, 10, 1121, 671))
        self.ProfileFrame.setStyleSheet("background-color:rgb(174, 194, 221)")
        self.ProfileFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.ProfileFrame.setObjectName("ProfileFrame")
        self.label = QtWidgets.QLabel(self.ProfileFrame)
        self.label.setGeometry(QtCore.QRect(20, 10, 1081, 52))
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.PDetailsFrame = QtWidgets.QFrame(self.ProfileFrame)
        self.PDetailsFrame.setGeometry(QtCore.QRect(10, 70, 1091, 571))
        self.PDetailsFrame.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.PDetailsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.PDetailsFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.PDetailsFrame.setObjectName("PDetailsFrame")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.PDetailsFrame)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(20, 20, 1051, 541))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.DetailsLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.DetailsLayout.setContentsMargins(0, 0, 0, 0)
        self.DetailsLayout.setObjectName("DetailsLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_17 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_17.setEnabled(True)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setAlignment(QtCore.Qt.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.verticalLayout_2.addWidget(self.label_17)
        spacerItem = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.formLayout_3 = QtWidgets.QFormLayout()
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_10 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_10)
        self.nameTextEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.nameTextEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.nameTextEdit.setStyleSheet("background-color:rgb(248, 248, 248)")
        self.nameTextEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.nameTextEdit.setObjectName("nameTextEdit")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.nameTextEdit)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(1, QtWidgets.QFormLayout.FieldRole, spacerItem1)
        self.label_16 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_16)
        self.addressTextEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.addressTextEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.addressTextEdit.setStyleSheet("background-color:rgb(248, 248, 248)")
        self.addressTextEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.addressTextEdit.setObjectName("addressTextEdit")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.addressTextEdit)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(3, QtWidgets.QFormLayout.FieldRole, spacerItem2)
        self.label_14 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_14)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(5, QtWidgets.QFormLayout.FieldRole, spacerItem3)
        self.label_15 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_15)
        self.countryTextEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.countryTextEdit.setStyleSheet("background-color:rgb(248, 248, 248)")
        self.countryTextEdit.setObjectName("countryTextEdit")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.countryTextEdit)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(7, QtWidgets.QFormLayout.FieldRole, spacerItem4)
        self.label_13 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.formLayout_3.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.label_13)
        self.linkedInTextEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.linkedInTextEdit.setStyleSheet("background-color:rgb(248, 248, 248)")
        self.linkedInTextEdit.setObjectName("linkedInTextEdit")
        self.formLayout_3.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.linkedInTextEdit)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(9, QtWidgets.QFormLayout.FieldRole, spacerItem5)
        self.label_11 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.formLayout_3.setWidget(10, QtWidgets.QFormLayout.LabelRole, self.label_11)
        self.emailTextEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.emailTextEdit.setStyleSheet("background-color:rgb(248, 248, 248)")
        self.emailTextEdit.setObjectName("emailTextEdit")
        self.formLayout_3.setWidget(10, QtWidgets.QFormLayout.FieldRole, self.emailTextEdit)
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(11, QtWidgets.QFormLayout.FieldRole, spacerItem6)
        self.label_12 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.formLayout_3.setWidget(12, QtWidgets.QFormLayout.LabelRole, self.label_12)
        self.phoneNumberTextEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.phoneNumberTextEdit.setStyleSheet("background-color:rgb(248, 248, 248)")
        self.phoneNumberTextEdit.setObjectName("phoneNumberTextEdit")
        self.formLayout_3.setWidget(12, QtWidgets.QFormLayout.FieldRole, self.phoneNumberTextEdit)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.formLayout_3.setLayout(13, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_4)
        self.dateOfBirthDateEdit = QtWidgets.QDateEdit(self.horizontalLayoutWidget)
        self.dateOfBirthDateEdit.setDateTime(QtCore.QDateTime(QtCore.QDate(1998, 1, 1), QtCore.QTime(0, 0, 0)))
        self.dateOfBirthDateEdit.setObjectName("dateOfBirthDateEdit")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.dateOfBirthDateEdit)
        self.verticalLayout_2.addLayout(self.formLayout_3)
        self.verticalLayout_2.setStretch(2, 8)
        self.DetailsLayout.addLayout(self.verticalLayout_2)
        self.line = QtWidgets.QFrame(self.horizontalLayoutWidget)
        self.line.setMinimumSize(QtCore.QSize(10, 0))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.line.setFont(font)
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setObjectName("line")
        self.DetailsLayout.addWidget(self.line)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_2 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.skillsList = QtWidgets.QListWidget(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.skillsList.setFont(font)
        self.skillsList.setObjectName("skillsList")
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList.addItem(item)
        self.verticalLayout.addWidget(self.skillsList)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem7)
        self.skillsClearButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.skillsClearButton.setObjectName("skillsClearButton")
        self.horizontalLayout.addWidget(self.skillsClearButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.educationTextEdit = QtWidgets.QTextEdit(self.horizontalLayoutWidget)
        self.educationTextEdit.setStyleSheet("background-color:rgb(248, 248, 248)")
        self.educationTextEdit.setObjectName("educationTextEdit")
        self.verticalLayout.addWidget(self.educationTextEdit)
        self.label_4 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.verticalLayout.addWidget(self.label_4)
        self.experienceTextEdit = QtWidgets.QTextEdit(self.horizontalLayoutWidget)
        self.experienceTextEdit.setStyleSheet("background-color:rgb(248, 248, 248)")
        self.experienceTextEdit.setObjectName("experienceTextEdit")
        self.verticalLayout.addWidget(self.experienceTextEdit)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem8)
        self.saveButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.saveButton.setObjectName("saveButton")
        self.horizontalLayout_3.addWidget(self.saveButton)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.verticalLayout.setStretch(0, 1)
        self.verticalLayout.setStretch(1, 4)
        self.verticalLayout.setStretch(3, 1)
        self.verticalLayout.setStretch(4, 4)
        self.verticalLayout.setStretch(5, 1)
        self.verticalLayout.setStretch(6, 4)
        self.verticalLayout.setStretch(7, 1)
        self.DetailsLayout.addLayout(self.verticalLayout)
        self.DetailsLayout.setStretch(0, 4)
        self.DetailsLayout.setStretch(1, 1)
        self.DetailsLayout.setStretch(2, 8)
        self.tabWidget_2.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tabWidget_3 = QtWidgets.QTabWidget(self.tab_4)
        self.tabWidget_3.setGeometry(QtCore.QRect(0, 0, 1161, 691))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tabWidget_3.setFont(font)
        self.tabWidget_3.setObjectName("tabWidget_3")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.ApplicationFrame = QtWidgets.QFrame(self.tab_7)
        self.ApplicationFrame.setGeometry(QtCore.QRect(10, 10, 1121, 651))
        self.ApplicationFrame.setStyleSheet("background-color:rgb(174, 194, 221)")
        self.ApplicationFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.ApplicationFrame.setObjectName("ApplicationFrame")
        self.label_28 = QtWidgets.QLabel(self.ApplicationFrame)
        self.label_28.setGeometry(QtCore.QRect(270, 10, 291, 52))
        self.label_28.setObjectName("label_28")
        self.ApplicationDisplayFrame = QtWidgets.QFrame(self.ApplicationFrame)
        self.ApplicationDisplayFrame.setGeometry(QtCore.QRect(10, 70, 1091, 551))
        self.ApplicationDisplayFrame.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.ApplicationDisplayFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ApplicationDisplayFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ApplicationDisplayFrame.setObjectName("ApplicationDisplayFrame")
        self.gridLayoutWidget = QtWidgets.QWidget(self.ApplicationDisplayFrame)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 1071, 501))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_29 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_29.setObjectName("label_29")
        self.gridLayout.addWidget(self.label_29, 8, 0, 1, 1)
        self.label_30 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_30.setObjectName("label_30")
        self.gridLayout.addWidget(self.label_30, 6, 0, 1, 1)
        self.companyLineEdit = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.companyLineEdit.setObjectName("companyLineEdit")
        self.gridLayout.addWidget(self.companyLineEdit, 3, 1, 1, 1)
        self.label_40 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_40.setObjectName("label_40")
        self.gridLayout.addWidget(self.label_40, 3, 0, 1, 1)
        self.label_41 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_41.setObjectName("label_41")
        self.gridLayout.addWidget(self.label_41, 7, 0, 1, 1)
        self.jobTitleLineEdit = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.jobTitleLineEdit.setObjectName("jobTitleLineEdit")
        self.gridLayout.addWidget(self.jobTitleLineEdit, 6, 1, 1, 1)
        self.scrollArea_2 = QtWidgets.QScrollArea(self.gridLayoutWidget)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 928, 204))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.descriptionTextEdit = QtWidgets.QTextEdit(self.scrollAreaWidgetContents_3)
        self.descriptionTextEdit.setGeometry(QtCore.QRect(0, 0, 551, 151))
        self.descriptionTextEdit.setObjectName("descriptionTextEdit")

        self.locationLineEdit = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.locationLineEdit.setObjectName("locationLineEdit")
        self.gridLayout.addWidget(self.locationLineEdit, 5, 1, 1, 1)
        self.locationLabel = QtWidgets.QLabel(self.gridLayoutWidget)
        self.locationLabel.setObjectName("location")
        self.gridLayout.addWidget(self.locationLabel, 5, 0, 1, 1)
        
        self.statusCheck = QtWidgets.QCheckBox(self.gridLayoutWidget)
        self.statusCheck.setObjectName("StatusCheckBox")
        self.gridLayout.addWidget(self.statusCheck, 9, 1, 1, 1)
        
        self.statusLabel = QtWidgets.QLabel(self.gridLayoutWidget)
        self.statusLabel.setObjectName("status")
        self.gridLayout.addWidget(self.statusLabel, 9, 0, 1, 1)

        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_3)
        self.gridLayout.addWidget(self.scrollArea_2, 7, 1, 1, 1)
        self.skillsList_2 = QtWidgets.QListWidget(self.gridLayoutWidget)
        self.skillsList_2.setObjectName("skillsList_2")
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.skillsList_2.addItem(item)
        self.gridLayout.addWidget(self.skillsList_2, 8, 1, 1, 1)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.ApplicationDisplayFrame)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(890, 520, 195, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.DiscardButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.DiscardButton.setObjectName("DiscardButton")
        self.DiscardButton.clicked.connect(ui.discardButton)
        self.horizontalLayout_2.addWidget(self.DiscardButton)
        self.SubmitButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.SubmitButton.setObjectName("SubmitButton")
        self.SubmitButton.clicked.connect(ui.submitApplication)
        self.horizontalLayout_2.addWidget(self.SubmitButton)
        self.tabWidget_3.addTab(self.tab_7, "")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.ApplicationFrame_2 = QtWidgets.QFrame(self.tab_8)
        self.ApplicationFrame_2.setGeometry(QtCore.QRect(10, 10, 1121, 651))
        self.ApplicationFrame_2.setStyleSheet("background-color:rgb(174, 194, 221)")
        self.ApplicationFrame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.ApplicationFrame_2.setObjectName("ApplicationFrame_2")
        self.label_42 = QtWidgets.QLabel(self.ApplicationFrame_2)
        self.label_42.setGeometry(QtCore.QRect(10, 10, 1091, 52))
        self.label_42.setAlignment(QtCore.Qt.AlignCenter)
        self.label_42.setObjectName("label_42")
        self.ApplicationDisplayFrame_2 = QtWidgets.QFrame(self.ApplicationFrame_2)
        self.ApplicationDisplayFrame_2.setGeometry(QtCore.QRect(10, 70, 1091, 551))
        self.ApplicationDisplayFrame_2.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.ApplicationDisplayFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ApplicationDisplayFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ApplicationDisplayFrame_2.setObjectName("ApplicationDisplayFrame_2")
        self.myApplicationsListView = QtWidgets.QListWidget(self.ApplicationDisplayFrame_2)
        self.myApplicationsListView.setGeometry(QtCore.QRect(5, 1, 1081, 481))
        self.myApplicationsListView.setObjectName("myApplicationsListView")
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.ApplicationDisplayFrame_2)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(4, 490, 1081, 31))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_5 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_5.addWidget(self.label_5)
        self.searchLineEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget_3)
        self.searchLineEdit.setText("")
        self.searchLineEdit.setObjectName("searchLineEdit")
        self.horizontalLayout_5.addWidget(self.searchLineEdit)
        self.searchButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.searchButton.setObjectName("searchButton")
        self.horizontalLayout_5.addWidget(self.searchButton)
        self.RemoveButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.RemoveButton.setObjectName("RemoveButton")
        self.RemoveButton.clicked.connect(ui.removeButton)
        self.horizontalLayout_5.addWidget(self.RemoveButton)
        self.UpdateButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.UpdateButton.setObjectName("UpdateButton")
        self.UpdateButton.clicked.connect(ui.updateButton)
        self.horizontalLayout_5.addWidget(self.UpdateButton)
        self.AddButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_3)
        self.AddButton.setObjectName("AddButton")
        self.AddButton.clicked.connect(ui.goToAddApplication)
        self.horizontalLayout_5.addWidget(self.AddButton)
        self.tabWidget_3.addTab(self.tab_8, "")
        self.tabWidget_2.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.textBrowser = QtWidgets.QTextBrowser(self.tab_5)
        self.textBrowser.setGeometry(QtCore.QRect(10, 10, 1121, 651))
        self.textBrowser.setStyleSheet("background-color:rgb(174, 194, 221)")
        self.textBrowser.setObjectName("textBrowser")
        self.graphicsView = QtWidgets.QGraphicsView(self.tab_5)
        self.graphicsView.setGeometry(QtCore.QRect(20, 100, 1101, 551))
        self.graphicsView.setObjectName("graphicsView")
        self.tabWidget_5 = QtWidgets.QTabWidget(self.tab_5)
        self.tabWidget_5.setGeometry(QtCore.QRect(30, 110, 1081, 531))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget_5.setFont(font)
        self.tabWidget_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget_5.setAutoFillBackground(True)
        self.tabWidget_5.setStyleSheet("")
        self.tabWidget_5.setIconSize(QtCore.QSize(16, 16))
        self.tabWidget_5.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget_5.setObjectName("tabWidget_5")
        self.Employers = QtWidgets.QWidget()
        self.Employers.setObjectName("Employers")
        self.edit_emp = QtWidgets.QLineEdit(self.Employers)
        self.edit_emp.setGeometry(QtCore.QRect(10, 10, 191, 31))
        self.edit_emp.setObjectName("edit_emp")
        self.add_emp = QtWidgets.QPushButton(self.Employers)
        self.add_emp.setGeometry(QtCore.QRect(210, 10, 121, 31))
        self.add_emp.setObjectName("add_emp")
        self.list_emp = QtWidgets.QListWidget(self.Employers)
        self.list_emp.setGeometry(QtCore.QRect(10, 50, 1061, 441))
        self.list_emp.setObjectName("list_emp")
        self.tabWidget_5.addTab(self.Employers, "")
        self.Sectors = QtWidgets.QWidget()
        self.Sectors.setObjectName("Sectors")
        self.edit_sec = QtWidgets.QLineEdit(self.Sectors)
        self.edit_sec.setGeometry(QtCore.QRect(10, 10, 191, 31))
        self.edit_sec.setObjectName("edit_sec")
        self.add_sec = QtWidgets.QPushButton(self.Sectors)
        self.add_sec.setGeometry(QtCore.QRect(210, 10, 121, 31))
        self.add_sec.setObjectName("add_sec")
        self.list_sec = QtWidgets.QListWidget(self.Sectors)
        self.list_sec.setGeometry(QtCore.QRect(10, 50, 1061, 441))
        self.list_sec.setObjectName("list_sec")
        self.tabWidget_5.addTab(self.Sectors, "")
        self.Jobtypes = QtWidgets.QWidget()
        self.Jobtypes.setObjectName("Jobtypes")
        self.add_job = QtWidgets.QPushButton(self.Jobtypes)
        self.add_job.setGeometry(QtCore.QRect(210, 10, 121, 31))
        self.add_job.setObjectName("add_job")
        self.edit_job = QtWidgets.QLineEdit(self.Jobtypes)
        self.edit_job.setGeometry(QtCore.QRect(10, 10, 191, 31))
        self.edit_job.setObjectName("edit_job")
        self.list_job = QtWidgets.QListWidget(self.Jobtypes)
        self.list_job.setGeometry(QtCore.QRect(10, 50, 1061, 441))
        self.list_job.setObjectName("list_job")
        self.tabWidget_5.addTab(self.Jobtypes, "")
        self.Interestareas = QtWidgets.QWidget()
        self.Interestareas.setObjectName("Interestareas")
        self.add_int = QtWidgets.QPushButton(self.Interestareas)
        self.add_int.setGeometry(QtCore.QRect(210, 10, 121, 31))
        self.add_int.setObjectName("add_int")
        self.edit_int = QtWidgets.QLineEdit(self.Interestareas)
        self.edit_int.setGeometry(QtCore.QRect(10, 10, 191, 31))
        self.edit_int.setObjectName("edit_int")
        self.list_int = QtWidgets.QListWidget(self.Interestareas)
        self.list_int.setGeometry(QtCore.QRect(10, 50, 1061, 441))
        self.list_int.setObjectName("list_int")
        self.tabWidget_5.addTab(self.Interestareas, "")
        self.tabWidget_2.addTab(self.tab_5, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.ProfileFrame_2 = QtWidgets.QFrame(self.tab_6)
        self.ProfileFrame_2.setGeometry(QtCore.QRect(10, 10, 1121, 661))
        self.ProfileFrame_2.setStyleSheet("background-color:rgb(174, 194, 221)")
        self.ProfileFrame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.ProfileFrame_2.setObjectName("ProfileFrame_2")
        self.ProfileFrame_3 = QtWidgets.QFrame(self.ProfileFrame_2)
        self.ProfileFrame_3.setGeometry(QtCore.QRect(0, 0, 1121, 661))
        self.ProfileFrame_3.setStyleSheet("background-color:rgb(174, 194, 221)")
        self.ProfileFrame_3.setFrameShape(QtWidgets.QFrame.Box)
        self.ProfileFrame_3.setObjectName("ProfileFrame_3")
        self.label_6 = QtWidgets.QLabel(self.ProfileFrame_3)
        self.label_6.setGeometry(QtCore.QRect(20, 10, 1091, 52))
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.PDetailsFrame_2 = QtWidgets.QFrame(self.ProfileFrame_3)
        self.PDetailsFrame_2.setEnabled(True)
        self.PDetailsFrame_2.setGeometry(QtCore.QRect(10, 70, 1101, 561))
        self.PDetailsFrame_2.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.PDetailsFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.PDetailsFrame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.PDetailsFrame_2.setObjectName("PDetailsFrame_2")
        self.tabWidget_4 = QtWidgets.QTabWidget(self.PDetailsFrame_2)
        self.tabWidget_4.setGeometry(QtCore.QRect(0, 0, 1091, 551))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget_4.setFont(font)
        self.tabWidget_4.setStyleSheet("")
        self.tabWidget_4.setTabPosition(QtWidgets.QTabWidget.West)
        self.tabWidget_4.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget_4.setElideMode(QtCore.Qt.ElideLeft)
        self.tabWidget_4.setTabsClosable(False)
        self.tabWidget_4.setTabBarAutoHide(False)
        self.tabWidget_4.setObjectName("tabWidget_4")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_9)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 10, 1051, 531))
        self.groupBox_2.setStyleSheet("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 20, 501, 251))
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.groupBox_3)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(4, 18, 491, 221))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_21 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_21.setObjectName("label_21")
        self.verticalLayout_3.addWidget(self.label_21)
        self.label_20 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_20.setOpenExternalLinks(True)
        self.label_20.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_20.setObjectName("label_20")
        self.verticalLayout_3.addWidget(self.label_20)
        self.label_7 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_3.addWidget(self.label_7)
        self.label_8 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_8.setOpenExternalLinks(True)
        self.label_8.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_3.addWidget(self.label_8)
        self.label_9 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_9.setObjectName("label_9")
        self.verticalLayout_3.addWidget(self.label_9)
        self.label_19 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_19.setOpenExternalLinks(True)
        self.label_19.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_19.setObjectName("label_19")
        self.verticalLayout_3.addWidget(self.label_19)
        self.label_49 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_49.setObjectName("label_49")
        self.verticalLayout_3.addWidget(self.label_49)
        self.label_22 = QtWidgets.QLabel(self.verticalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        self.verticalLayout_3.addWidget(self.label_22)
        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_4.setGeometry(QtCore.QRect(530, 10, 521, 261))
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.groupBox_4)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(10, 20, 501, 231))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_51 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_51.setObjectName("label_51")
        self.verticalLayout_5.addWidget(self.label_51)
        self.label_50 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_50.setFont(font)
        self.label_50.setOpenExternalLinks(True)
        self.label_50.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_50.setObjectName("label_50")
        self.verticalLayout_5.addWidget(self.label_50)
        self.label_26 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_26.setObjectName("label_26")
        self.verticalLayout_5.addWidget(self.label_26)
        self.label_25 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_25.setFont(font)
        self.label_25.setOpenExternalLinks(True)
        self.label_25.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_25.setObjectName("label_25")
        self.verticalLayout_5.addWidget(self.label_25)
        self.label_24 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_24.setObjectName("label_24")
        self.verticalLayout_5.addWidget(self.label_24)
        self.label_23 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_23.setOpenExternalLinks(True)
        self.label_23.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_23.setObjectName("label_23")
        self.verticalLayout_5.addWidget(self.label_23)
        self.label_48 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_48.setObjectName("label_48")
        self.verticalLayout_5.addWidget(self.label_48)
        self.label_47 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_47.setFont(font)
        self.label_47.setOpenExternalLinks(True)
        self.label_47.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_47.setObjectName("label_47")
        self.verticalLayout_5.addWidget(self.label_47)
        self.groupBox_5 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_5.setGeometry(QtCore.QRect(0, 270, 511, 251))
        self.groupBox_5.setObjectName("groupBox_5")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.groupBox_5)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 20, 491, 221))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_58 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_58.setObjectName("label_58")
        self.verticalLayout_4.addWidget(self.label_58)
        self.label_57 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_57.setTextFormat(QtCore.Qt.RichText)
        self.label_57.setOpenExternalLinks(True)
        self.label_57.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_57.setObjectName("label_57")
        self.verticalLayout_4.addWidget(self.label_57)
        self.label_27 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_27.setObjectName("label_27")
        self.verticalLayout_4.addWidget(self.label_27)
        self.label_52 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_52.setOpenExternalLinks(True)
        self.label_52.setObjectName("label_52")
        self.verticalLayout_4.addWidget(self.label_52)
        self.label_53 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_53.setObjectName("label_53")
        self.verticalLayout_4.addWidget(self.label_53)
        self.label_54 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_54.setOpenExternalLinks(True)
        self.label_54.setObjectName("label_54")
        self.verticalLayout_4.addWidget(self.label_54)
        self.label_56 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_56.setObjectName("label_56")
        self.verticalLayout_4.addWidget(self.label_56)
        self.label_55 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_55.setOpenExternalLinks(True)
        self.label_55.setTextInteractionFlags(QtCore.Qt.TextBrowserInteraction)
        self.label_55.setObjectName("label_55")
        self.verticalLayout_4.addWidget(self.label_55)
        self.groupBox_6 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_6.setGeometry(QtCore.QRect(530, 270, 521, 251))
        self.groupBox_6.setObjectName("groupBox_6")
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.groupBox_6)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(11, 17, 501, 221))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_59 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_59.setObjectName("label_59")
        self.verticalLayout_6.addWidget(self.label_59)
        self.label_60 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_60.setFont(font)
        self.label_60.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.label_60.setOpenExternalLinks(True)
        self.label_60.setObjectName("label_60")
        self.verticalLayout_6.addWidget(self.label_60)
        self.label_62 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_62.setOpenExternalLinks(True)
        self.label_62.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard)
        self.label_62.setObjectName("label_62")
        self.verticalLayout_6.addWidget(self.label_62)
        self.label_61 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_61.setFont(font)
        self.label_61.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.label_61.setOpenExternalLinks(True)
        self.label_61.setObjectName("label_61")
        self.verticalLayout_6.addWidget(self.label_61)
        self.label_64 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_64.setOpenExternalLinks(True)
        self.label_64.setObjectName("label_64")
        self.verticalLayout_6.addWidget(self.label_64)
        self.label_63 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_63.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.label_63.setOpenExternalLinks(True)
        self.label_63.setObjectName("label_63")
        self.verticalLayout_6.addWidget(self.label_63)
        self.label_66 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_66.setOpenExternalLinks(True)
        self.label_66.setObjectName("label_66")
        self.verticalLayout_6.addWidget(self.label_66)
        self.label_65 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_65.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.label_65.setObjectName("label_65")
        self.verticalLayout_6.addWidget(self.label_65)
        self.tabWidget_4.addTab(self.tab_9, "")
        self.tab_10 = QtWidgets.QWidget()
        self.tab_10.setObjectName("tab_10")
        self.groupBox_7 = QtWidgets.QGroupBox(self.tab_10)
        self.groupBox_7.setGeometry(QtCore.QRect(10, 10, 1051, 531))
        self.groupBox_7.setObjectName("groupBox_7")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.groupBox_7)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(10, 20, 1031, 501))
        self.plainTextEdit_2.setReadOnly(True)
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.tabWidget_4.addTab(self.tab_10, "")
        self.label_18 = QtWidgets.QLabel(self.ProfileFrame_3)
        self.label_18.setGeometry(QtCore.QRect(570, 640, 151, 16))
        self.label_18.setObjectName("label_18")
        self.tabWidget_2.addTab(self.tab_6, "   Learn more       ")
        self.loadButton = QtWidgets.QPushButton(self.centralwidget)
        self.loadButton.setGeometry(QtCore.QRect(1230, 260, 93, 28))
        self.loadButton.setObjectName("loadButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1364, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        self.tabWidget_2.setCurrentIndex(0)
        self.tabWidget_3.setCurrentIndex(1)
        self.tabWidget_5.setCurrentIndex(2)
        self.tabWidget_4.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.load_profile()
        self.saveButton.clicked.connect(self.save_profile)
        self.loadButton.clicked.connect(self.load_profile)
        self.searchButton.clicked.connect(self.searchByLocationButton)
        self.skillsClearButton.clicked.connect(self.clearSkills)
        self.onlyInt = QIntValidator()
        self.phoneNumberTextEdit.setValidator(self.onlyInt)
        d = self.selectionChanged()

        self.add_emp.clicked.connect(self.add_list_emp)
        self.list_emp.setContextMenuPolicy(Qt.CustomContextMenu)
        self.list_emp.contextMenuPolicy()
        self.list_emp.customContextMenuRequested[QtCore.QPoint].connect(self.list_emp_rightMenuShow)

        self.add_sec.clicked.connect(self.add_list_sec)
        self.list_sec.setContextMenuPolicy(Qt.CustomContextMenu)
        self.list_sec.contextMenuPolicy()
        self.list_sec.customContextMenuRequested[QtCore.QPoint].connect(self.list_sec_rightMenuShow)

        self.add_job.clicked.connect(self.add_list_job)
        self.list_job.setContextMenuPolicy(Qt.CustomContextMenu)
        self.list_job.contextMenuPolicy()
        self.list_job.customContextMenuRequested[QtCore.QPoint].connect(self.list_job_rightMenuShow)

        self.add_int.clicked.connect(self.add_list_int)
        self.list_int.setContextMenuPolicy(Qt.CustomContextMenu)
        self.list_int.contextMenuPolicy()
        self.list_int.customContextMenuRequested[QtCore.QPoint].connect(self.list_int_rightMenuShow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.label.setText(_translate("MainWindow",
                                      "<html><head/><body><p><span style=\" font-size:28pt;\">PROFILE</span></p></body></html>"))
        self.label_17.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:16pt;\">Personal Details</span></p></body></html>"))
        self.label_10.setText(_translate("MainWindow", "Name:"))
        self.label_16.setText(_translate("MainWindow", "Address:"))
        self.label_14.setText(_translate("MainWindow", "Date of Birth:"))
        self.label_15.setText(_translate("MainWindow", "Country:"))
        self.label_13.setText(_translate("MainWindow", "LinkedIn:"))
        self.label_11.setText(_translate("MainWindow", "Email:"))
        self.label_12.setText(_translate("MainWindow", "Phone number:"))
        self.label_2.setText(_translate("MainWindow", "Skills"))
        __sortingEnabled = self.skillsList.isSortingEnabled()
        self.skillsList.setSortingEnabled(False)
        item = self.skillsList.item(0)
        item.setText(_translate("MainWindow", "I tend to find new ways to solve my tasks"))
        item = self.skillsList.item(1)
        item.setText(_translate("MainWindow", "I get along wtth other people very well"))
        item = self.skillsList.item(2)
        item.setText(_translate("MainWindow", "I can offer constructive criticism and my point of view"))
        item = self.skillsList.item(3)
        item.setText(_translate("MainWindow", "I have no problems with finding solutions to obstacles that I meet"))
        item = self.skillsList.item(4)
        item.setText(_translate("MainWindow", "I have presented / gave speeches / shown project proposals"))
        item = self.skillsList.item(5)
        item.setText(_translate("MainWindow", "I see the good in things and do not give into frustration"))
        item = self.skillsList.item(6)
        item.setText(_translate("MainWindow", "I can handle other people\'s complaints"))
        item = self.skillsList.item(7)
        item.setText(_translate("MainWindow", "I can wait calmly for / through something"))
        item = self.skillsList.item(8)
        item.setText(_translate("MainWindow", "I am able to convince other people to take appropriate action"))
        item = self.skillsList.item(9)
        item.setText(_translate("MainWindow", "I treat people with courtesy, politeness, and kindness"))
        item = self.skillsList.item(10)
        item.setText(_translate("MainWindow",
                                "I can be trusted to do my work correctly without supervision /turning to supervisors everytime"))
        item = self.skillsList.item(11)
        item.setText(_translate("MainWindow", "I tend to tolerate what I find adverse / uncomfortable / challenging"))
        item = self.skillsList.item(12)
        item.setText(_translate("MainWindow", "I have experience with customers and know how to get to them"))
        item = self.skillsList.item(13)
        item.setText(
            _translate("MainWindow", "I can effectively achieve thoroughness and accuracy when accomplishing tasks"))
        item = self.skillsList.item(14)
        item.setText(_translate("MainWindow", "I have been cooperating with other people on projects"))
        item = self.skillsList.item(15)
        item.setText(
            _translate("MainWindow", "I am able to effectively communicate  with superiors, colleagues, and staff"))
        item = self.skillsList.item(16)
        item.setText(_translate("MainWindow", "I am able to successfully work toward a common goal with others"))
        item = self.skillsList.item(17)
        item.setText(_translate("MainWindow",
                                "I can manage financial transactions, analyze financial data and generate financial reports"))
        item = self.skillsList.item(18)
        item.setText(_translate("MainWindow", "I have no problems with fully concentrating on what is being said"))
        item = self.skillsList.item(19)
        item.setText(_translate("MainWindow",
                                "I am able to adjust to changes in your environment (responsibilities/expectations/trends/other)"))
        item = self.skillsList.item(20)
        item.setText(_translate("MainWindow", "I can reach a compromise between two or more parties"))
        item = self.skillsList.item(21)
        item.setText(
            _translate("MainWindow", "I am able to settle disputes and reach agreements between two or more parties"))
        item = self.skillsList.item(22)
        item.setText(_translate("MainWindow", "I have no problems with making correct decisions"))
        item = self.skillsList.item(23)
        item.setText(_translate("MainWindow", "I am able to understand other people very well"))
        item = self.skillsList.item(24)
        item.setText(_translate("MainWindow", "I can communicate with others in more than 1 language"))
        item = self.skillsList.item(25)
        item.setText(
            _translate("MainWindow", "I have experience with managing projects and/or leading a team of people"))
        item = self.skillsList.item(26)
        item.setText(_translate("MainWindow",
                                "I can use my/others time, energy, strength, etc. efficiently in order to achieve the desired outcome."))
        self.skillsList.setSortingEnabled(__sortingEnabled)
        self.skillsClearButton.setText(_translate("MainWindow", "Clear"))
        self.label_3.setText(_translate("MainWindow", "Education"))
        self.label_4.setText(_translate("MainWindow", "Experience"))
        self.saveButton.setText(_translate("MainWindow", "Save"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3),
                                    _translate("MainWindow", "           Profile     "))
        self.label_28.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:28pt;\">Add a Job</span></p></body></html>"))
        self.label_29.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:16pt;\">Skills</span></p></body></html>"))
        self.label_30.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:16pt;\">Job Title</span></p></body></html>"))
        self.label_40.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:16pt;\">Company</span></p></body></html>"))
        self.label_41.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:16pt;\">Description</span></p></body></html>"))
        self.locationLabel.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:16pt;\">Location</span></p></body></html>"))
        self.statusLabel.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:14pt;\">Tick if Applied:</span></p></body></html>"))
        __sortingEnabled = self.skillsList_2.isSortingEnabled()
        self.skillsList_2.setSortingEnabled(False)
        item = self.skillsList_2.item(0)
        item.setText(_translate("MainWindow", "Creativity"))
        item = self.skillsList_2.item(1)
        item.setText(_translate("MainWindow", "Relationship building"))
        item = self.skillsList_2.item(2)
        item.setText(_translate("MainWindow", "Critical Thinking"))
        item = self.skillsList_2.item(3)
        item.setText(_translate("MainWindow", "Problem Solving"))
        item = self.skillsList_2.item(4)
        item.setText(_translate("MainWindow", "Public Speaking"))
        item = self.skillsList_2.item(5)
        item.setText(_translate("MainWindow", "Positive Attitude"))
        item = self.skillsList_2.item(6)
        item.setText(_translate("MainWindow", "Complaint Resolution"))
        item = self.skillsList_2.item(7)
        item.setText(_translate("MainWindow", "Patience"))
        item = self.skillsList_2.item(8)
        item.setText(_translate("MainWindow", "Persuasion and influencing skills"))
        item = self.skillsList_2.item(9)
        item.setText(_translate("MainWindow", "Respectfulness"))
        item = self.skillsList_2.item(10)
        item.setText(_translate("MainWindow", "Reliability"))
        item = self.skillsList_2.item(11)
        item.setText(_translate("MainWindow", "Tolerance"))
        item = self.skillsList_2.item(12)
        item.setText(_translate("MainWindow", "Improving Customer Experience"))
        item = self.skillsList_2.item(13)
        item.setText(_translate("MainWindow", "Attention to Detail"))
        item = self.skillsList_2.item(14)
        item.setText(_translate("MainWindow", "Teamwork Skills"))
        item = self.skillsList_2.item(15)
        item.setText(_translate("MainWindow", "Communication"))
        item = self.skillsList_2.item(16)
        item.setText(_translate("MainWindow", "Collaboration"))
        item = self.skillsList_2.item(17)
        item.setText(_translate("MainWindow", "Accounting"))
        item = self.skillsList_2.item(18)
        item.setText(_translate("MainWindow", "Active Listening"))
        item = self.skillsList_2.item(19)
        item.setText(_translate("MainWindow", "Adaptability"))
        item = self.skillsList_2.item(20)
        item.setText(_translate("MainWindow", "Negotiation"))
        item = self.skillsList_2.item(21)
        item.setText(_translate("MainWindow", "Conflict Resolution"))
        item = self.skillsList_2.item(22)
        item.setText(_translate("MainWindow", "Decision-making"))
        item = self.skillsList_2.item(23)
        item.setText(_translate("MainWindow", "Empathy"))
        item = self.skillsList_2.item(24)
        item.setText(_translate("MainWindow", "Bilingual Customer Support"))
        item = self.skillsList_2.item(25)
        item.setText(_translate("MainWindow", "Management"))
        item = self.skillsList_2.item(26)
        item.setText(_translate("MainWindow", "Organization"))
        self.skillsList_2.setSortingEnabled(__sortingEnabled)
        self.DiscardButton.setText(_translate("MainWindow", "Discard"))
        self.SubmitButton.setText(_translate("MainWindow", "Submit"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_7), _translate("MainWindow",
                                                                                     "                                                            Add a Job                                   "))
        self.label_42.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:28pt;\">MY APPLICATIONS</span></p></body></html>"))
        self.label_5.setText(_translate("MainWindow", "Location:"))
        self.searchButton.setText(_translate("MainWindow", "SEARCH"))
        self.RemoveButton.setText(_translate("MainWindow", "REMOVE"))
        self.UpdateButton.setText(_translate("MainWindow", "UPDATE"))
        self.AddButton.setText(_translate("MainWindow", "ADD"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_8), _translate("MainWindow",
                                                                                     "                         My applications                                                         "))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4),
                                    _translate("MainWindow", "         Applications     "))
        self.textBrowser.setHtml(_translate("MainWindow",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
                                            "<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\'; font-size:48pt; font-weight:600; vertical-align:sub;\">Career Interests</span></p></body></html>"))
        self.add_emp.setText(_translate("MainWindow", "Add"))
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.Employers), _translate("MainWindow",
                                                                                         "                              Employers                          "))
        self.add_sec.setText(_translate("MainWindow", "Add"))
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.Sectors), _translate("MainWindow",
                                                                                       "                       Sectors                            "))
        self.add_job.setText(_translate("MainWindow", "Add"))
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.Jobtypes),
                                    _translate("MainWindow", "          Job types                             "))
        self.add_int.setText(_translate("MainWindow", "Add"))
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.Interestareas),
                                    _translate("MainWindow", "Interest Areas                         "))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_5),
                                    _translate("MainWindow", "    Career Interests      "))
        self.label_6.setText(_translate("MainWindow",
                                        "<html><head/><body><p><span style=\" font-size:28pt;\">Learn More</span></p></body></html>"))
        self.groupBox_2.setTitle(_translate("MainWindow", "USEFUL LINKS"))
        self.groupBox_3.setTitle(_translate("MainWindow", "CAREERS PROSPECTS"))
        self.label_21.setText(_translate("MainWindow", "NATIONAL CAREERS SERVICE"))
        self.label_20.setText(_translate("MainWindow", "nationalcareers.service.gov.uk/"))
        self.label_7.setText(_translate("MainWindow", "PROSPECTS"))
        self.label_8.setText(_translate("MainWindow", "www.prospects.ac.uk/"))
        self.label_9.setText(_translate("MainWindow", "TARGET CAREERS"))
        self.label_19.setText(_translate("MainWindow", "targetcareers.co.uk/career-sectors"))
        self.label_49.setText(_translate("MainWindow", "UCAS"))
        self.label_22.setText(_translate("MainWindow", "ucas.com/ucas/after-gcses/find-career-ideas/explore-jobs"))
        self.groupBox_4.setTitle(_translate("MainWindow", "INTERVIEW TECHNIQUES"))
        self.label_51.setText(_translate("MainWindow", "TARGET JOBS"))
        self.label_50.setText(_translate("MainWindow", "targetjobs.co.uk/careers-advice/interview-techniques"))
        self.label_26.setText(_translate("MainWindow", "BALANCE CAREERS"))
        self.label_25.setText(_translate("MainWindow", "thebalancecareers.com/top-job-interview-tips-2061331"))
        self.label_24.setText(_translate("MainWindow", "REED UK"))
        self.label_23.setText(_translate("MainWindow", "www.reed.co.uk/career-advice/interview-techniques/"))
        self.label_48.setText(_translate("MainWindow", "TELEGRAPH JOBS"))
        self.label_47.setText(_translate("MainWindow", "jobs.telegraph.co.uk/article/50-best-interview-tips/"))
        self.groupBox_5.setTitle(_translate("MainWindow", "JOB SEARCH SITES"))
        self.label_58.setText(_translate("MainWindow", "REED UK"))
        self.label_57.setText(_translate("MainWindow", "www.reed.co.uk/jobs"))
        self.label_27.setText(_translate("MainWindow", "INDEED UK"))
        self.label_52.setText(_translate("MainWindow", "uk.indeed.com/"))
        self.label_53.setText(_translate("MainWindow", "MONSTER UK"))
        self.label_54.setText(_translate("MainWindow", "www.monster.co.uk/"))
        self.label_56.setText(_translate("MainWindow", "CV LIBRARY"))
        self.label_55.setText(_translate("MainWindow", "www.cv-library.co.uk/"))
        self.groupBox_6.setTitle(_translate("MainWindow", "CV ADVICE"))
        self.label_59.setText(_translate("MainWindow", "PROSPECTS CV ADVICE"))
        self.label_60.setText(
            _translate("MainWindow", "prospects.ac.uk/careers-advice/cvs-and-cover-letters/how-to-write-a-cv"))
        self.label_62.setText(_translate("MainWindow", "BARCLAYS LIFE SKILLS"))
        self.label_61.setText(
            _translate("MainWindow", "barclayslifeskills.com/i-want-help-applying-for-jobs/school/cv-builder/"))
        self.label_64.setText(_translate("MainWindow", "REED UK | CV BUILDER"))
        self.label_63.setText(_translate("MainWindow", "www.reed.co.uk/cvbuilder"))
        self.label_66.setText(_translate("MainWindow", "THE GUARDIAN | JOBS"))
        self.label_65.setText(_translate("MainWindow", "jobs.theguardian.com/careers/cv-advice/"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_9), _translate("MainWindow", "USEFUL LINKS"))
        self.groupBox_7.setTitle(_translate("MainWindow", "FREQUENTLY ASKED QUESTIONS"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_10), _translate("MainWindow", "FAQ"))
        self.label_18.setText(_translate("MainWindow", "Courtesy of Team Calder"))
        self.loadButton.setText(_translate("MainWindow", "LOAD DATA"))
        self.plainTextEdit_2.setPlainText(_translate("MainWindow", "WHAT DOES THIS PROGRAM DO?\n"
                                                                   "You can use this program to produce a personal profile based on your qualifications, experience and characteristics. Plus you can manually add and record your job applications\n"
                                                                   "\n"
                                                                   "HOW ARE MY JOB APPLICATIONS CATEGORISED?\n"
                                                                   "Your applications are categorised by which region you have applied to, i.e. London, Cardiff\n"
                                                                   "\n"
                                                                   "CAN I DELETE MY APPLICATIONS?\n"
                                                                   "Yes, should you wish you can delete any job applications you have added. Alternatively you can update job applications.\n"
                                                                   "\n"
                                                                   "CAN I SEARCH FOR JOBS VIA THIS APP?\n"
                                                                   "This program was designed to help you the user, keep track of their career. There is a \'USEFUL LINKS\' tab on this page which can direct you to job search sites.\n"
                                                                   "\n"
                                                                   "THIS APP PROVIDE CAREERS ADVICE?\n"
                                                                   "As previously mentioned, this app is designed to help you record and monitor your job applications. There are websites provided on the \'USEFUL LINKS\' tab that can be of some use, such as a list of CV advice sites.\n"
                                                                   "\n"
                                                                   "DOES THIS APP STORE MY DATA ONLINE?\n"
                                                                   "No. All your information is stored locally and for your eyes only.\n"
                                                                   ""))

    def save_profile(self):
        # function that stores every field in profile tab into a variable
        global name, address, date_of_birth, country, linkedIn, email, phone_number, skillsChecked, education, experience, boolList
        name = self.nameTextEdit.text()
        address = self.addressTextEdit.text()
        date_of_birth = self.dateOfBirthDateEdit.date()
        country = self.countryTextEdit.text()
        linkedIn = self.linkedInTextEdit.text()
        email = self.emailTextEdit.text()
        phone_number = self.phoneNumberTextEdit.text()
        skillsChecked, boolList = self.selectionChanged()
        education = self.educationTextEdit.toPlainText()
        experience = self.experienceTextEdit.toPlainText()
        self.populate_application_skill_list(boolList)
        self.save_self()

    def load_profile(self):
        # functions that loads previous known state of each field in profile by using global variables
        global name, address, date_of_birth, country, linkedIn, email, phone_number, education, experience, boolList
        mylist = self.load_self()
        print(mylist)
        name = str(mylist[0])
        address= str(mylist[1])
        print(date_of_birth)
        date_of_birth = mylist[2]
        print(type(date_of_birth))
        date_of_birth = datetime.datetime.strptime(date_of_birth, "(%Y, %m, %d)")
        print(type(date_of_birth))
        country = mylist[3]
        linkedIn = mylist[4]
        email = mylist[5]

        phone_number = mylist[6]
        education = mylist[8]
        experience = mylist[9]
        print(experience)
        boolList = list(mylist[10])
        self.nameTextEdit.setText(name)
        self.addressTextEdit.setText(address)
        self.dateOfBirthDateEdit.setDate(date_of_birth)
        self.countryTextEdit.setText(country)
        self.linkedInTextEdit.setText(linkedIn)
        self.emailTextEdit.setText(email)
        self.phoneNumberTextEdit.setText(phone_number)
        self.checkList()
        self.populate_application_skill_list(boolList)
        self.educationTextEdit.setPlainText(education)
        self.experienceTextEdit.setPlainText(experience)

    def save_self(self):
        global name, address, date_of_birth, country, linkedIn, email, phone_number, skillsChecked, education, experience, boolList
        date_of_birth = date_of_birth.getDate()
        variables_to_save = [name, address, date_of_birth, country, linkedIn, email, phone_number, skillsChecked, education, experience, boolList]
        f = open("saved_data.txt", "w")
        i = 0
        for x in range(len(variables_to_save)):
            print(variables_to_save[i])
            f.write(f"{variables_to_save[i]}\n")
            i += 1
        f.close()

    def load_self(self):
        global name, address, date_of_birth, country, linkedIn, email, phone_number, skillsChecked, education, experience, boolList
        try:
            with open("saved_data.txt","r") as f:
                mylist = f.read().splitlines()
        except IOError:
            with open("saved_data.txt", "w") as f:
                self.save_self()
                f.close()
            with open("saved_data.txt","r") as f:
                mylist = f.read().splitlines()
        finally:
            f.close()
        return mylist

    def selectionChanged(self):
        # function that creates a list of checked skills from the profile skills list
        checked = []
        boollist = []
        for row in range(self.skillsList.count()):
            item = self.skillsList.item(row)
            if item.checkState():
                checked.append(item)
                boollist.append(1)
            else:
                boollist.append(0)
                
        global boolList
        return checked, boollist

    def checkList(self):
        # function that enables the loading of checked skills from a global list
        global skillsChecked
        self.clearSkills()
        for row in range(self.skillsList.count()):
            item = self.skillsList.item(row)
            for checked in skillsChecked:
                if checked == item:
                    item.setCheckState(Qt.Checked)

    def populate_application_skill_list(self, boolList):
        boolList = str(boolList)
        boolList = boolList.replace("(", "")
        boolList = boolList.replace(")", "")
        boolList = boolList.replace("[", "")
        boolList = boolList.replace("]", "")
        boolList = boolList.replace(",", "")
        boolList = boolList.replace(" ", "")
        boolList = boolList.replace("'", "")
        print("BoolList:", boolList)
        
        for row in range(len(boolList)):
            item = self.skillsList.item(row)
            print(item.text())
            print(item.checkState())
            if(boolList[row] == "1"):
                item.setCheckState(2)
                
            else:
                item.setCheckState(0)
               

        

    def clearSkills(self):
        # function that unchecks all skills
        for row in range(self.skillsList.count()):
            item = self.skillsList.item(row)
            item.setCheckState(Qt.Unchecked)
        for row in range(self.skillsList_2.count()):
            item = self.skillsList_2.item(row)
            item.setCheckState(Qt.Unchecked)

    def addAppToListview(self, appListview):
        # Function to display applications, should be run in update

        nextRow = 1
        nextRow = dbConnection.FindNextRow()

        if (nextRow == None):
            nextRow = 0

        for i in range(nextRow + 1):
            if (i > 0):
                app = dbConnection.ViewApplication(str(i))
                skills = dbConnection.ViewSkills(str(i))
                

                for i in range(len(app)):
                    item_App = QtWidgets.QListWidgetItem(app[i][0] + ",  " + app[i][1])
                    item_Location = QtWidgets.QListWidgetItem(app[i][3] + ",  " + app[i][4])
                    item_Description = QtWidgets.QListWidgetItem(app[i][2])

                    appFont = QtGui.QFont()
                    appFont.setBold(True)
                    appFont.setWeight(75)
                    appFont.setPointSize(24)
                    item_App.setFont(appFont)
                    r = 174
                    g = 194
                    b = 221
                    item_App.setBackground(QColor(r,g,b))
                    appListview.addItem(item_App)

                    locFont = QtGui.QFont()
                    locFont.setBold(True)
                    locFont.setWeight(75)
                    locFont.setPointSize(14)
                   
                  
                    item_Location.setBackground(QColor(r,g,b))
                    item_Location.setFont(locFont)

                    appListview.addItem(item_Location)
                    appListview.addItem(item_Description)
                    
                    textSkills = ui.SkillsParser(skills)
                    matchedSkills = ui.SkillMatchChecker(skills)
                    matchedSkillsText = ui.MatchSkillsToText(matchedSkills)
                    print("Matched Skills:", matchedSkills)
                    print("Matched SKills Text:", matchedSkillsText)
                    print("Text Skills:", textSkills)
                    for k in range(len(textSkills)):
                        skillFont = QtGui.QFont()
                   
                        if(textSkills[k] in matchedSkillsText):
                            skillFont.setBold(True)
                            skillFont.setWeight(75)    
                            skillFont.setCapitalization(True)
                            print("Bolding", textSkills[k])
                        else:
                            skillFont.setBold(False)
                            skillFont.setWeight(25)
                            
                            
                        item_Skills = QtWidgets.QListWidgetItem(textSkills[k])
                        
                        skillFont.setPointSize(9)
                        item_Skills.setFont(skillFont)
                        item_Description.setFlags(QtCore.Qt.NoItemFlags)
                        item_Skills.setFlags(QtCore.Qt.NoItemFlags)
                        appListview.addItem(item_Skills)
    
    
    
    def MatchSkillsToText(self, matchedSkills):
        stringSkills = ["START", "creativity", "relationship building", "critical thinking", "problem solving",
                        "public speaking", "Positive attitude", "Complaint resolution", "Patience",
                        "Persuasion and influencing skills", "Respectfulness", "Reliability", "Tolerance",
                        "Improving customer experience", "Attention to detail", "Teamwork skills", "Communication",
                        "Collaboration", "Accounting", "Active_listening", "Adaptability", "Negotiation",
                        "Conflict resolution", "Decision making", "Empathy", "Bilingual customer support", "Management",
                        "Organization", "END"]
        resultSkills = []
        for i in range(len(matchedSkills)):
            if (matchedSkills[i - 1]  == "1"):
                if (i == 0 or i == 29):
                    print("stripped")
                else:
                    resultSkills.append(stringSkills[i])
        return resultSkills
        
        
            
    def SkillMatchChecker(self, skills):
        checked, boolList = self.selectionChanged()
       
    
        skills = str(skills)
        skills = skills.replace("(", "")
        skills = skills.replace(")", "")
        skills = skills.replace("[", "")
        skills = skills.replace("]", "")
        skills = skills.replace(",", "")
        skills = skills.replace(" ", "")
        skills = skills[1:]
        boolList = str(boolList)
        boolList = boolList.replace("(", "")
        boolList = boolList.replace(")", "")
        boolList = boolList.replace("[", "")
        boolList = boolList.replace("]", "")
        boolList = boolList.replace(",", "")
        boolList = boolList.replace(" ", "")
        print("Skills", skills)
        print("BoolList", boolList)
        matched = []
        
        for row in range(len(boolList)):
            if(boolList[row] == "1" and skills[row] == "1"):
                print("Matched")
                matched.append("1")
                
            else:
                print("Not matched")
                matched.append("0")
        return matched

    def SkillsParser(self, SkillsToParse):
        SkillsToParse = str(SkillsToParse)
        SkillsToParse = SkillsToParse.replace("(", "")
        SkillsToParse = SkillsToParse.replace(")", "")
        SkillsToParse = SkillsToParse.replace("[", "")
        SkillsToParse = SkillsToParse.replace("]", "")
        SkillsToParse = SkillsToParse.replace(",", "")
        SkillsToParse = SkillsToParse.replace(" ", "")

        stringSkills = ["START", "creativity", "relationship building", "critical thinking", "problem solving",
                        "public speaking", "Positive attitude", "Complaint resolution", "Patience",
                        "Persuasion and influencing skills", "Respectfulness", "Reliability", "Tolerance",
                        "Improving customer experience", "Attention to detail", "Teamwork skills", "Communication",
                        "Collaboration", "Accounting", "Active_listening", "Adaptability", "Negotiation",
                        "Conflict resolution", "Decision making", "Empathy", "Bilingual customer support", "Management",
                        "Organization", "END"]
        resultSkills = []
        for i in range(len(stringSkills) - 1):
            if (SkillsToParse[i] == "1"):
                if (i == 0 or i == 29):
                    print("stripped")
                else:

                    # print(stringSkills[i])
                    # print(SkillsToParse)
                    resultSkills.append(stringSkills[i])

        # print(resultSkills)
        return resultSkills

    def goToAddApplication(self):
        print("Application added")
        self.tabWidget_3.setCurrentIndex(0)

    def discardButton(self):
        print("discarded")
        self.companyLineEdit.clear()
        self.locationLineEdit.clear()
        self.jobTitleLineEdit.clear()
        self.descriptionTextEdit.clear()

        for i in range(self.skillsList_2.count()):
            item = self.skillsList_2.item(i)
            item.setCheckState(0)

    def submitApplication(self):
        skills = []
        boolSkills = []
        if (
                self.companyLineEdit.text() != "" and self.jobTitleLineEdit.text() != "" and self.descriptionTextEdit.toPlainText() != "" and self.locationLineEdit.text() != ""):
            print("Correct info")
            company = self.companyLineEdit.text()
            location = self.locationLineEdit.text()
            jobTitle = self.jobTitleLineEdit.text()
            description = self.descriptionTextEdit.toPlainText()
            statusCheckState = self.statusCheck.checkState()
            if(statusCheckState):
                status = "APPLIED"
            else:
                status = "WAITING TO APPLY"
                
            for i in range(self.skillsList_2.count()):
                item = self.skillsList_2.item(i)
                if (item.checkState() == 2):
                    skills.append(item.text())
                    boolSkills.append(1)
                else:
                    boolSkills.append(0)
        else:
            print("Missing value!")

        dbConnection.AddJob(boolSkills, company, jobTitle, description, location, status)
        print("SUBMITTED")

    def updateButton(self):
        items = ui.myApplicationsListView
        items.clear()
        ui.addAppToListview(ui.myApplicationsListView)
        print("Updated!")

    def searchByLocationButton(self):
        appListview = ui.myApplicationsListView
        items = ui.myApplicationsListView
        items.clear()
        location = self.searchLineEdit.text()
        for app in dbConnection.searchByLocation(location):
            print(app)
            item_App = QtWidgets.QListWidgetItem(str(app[1]) + ",  " + str(app[2]))
            item_Location = QtWidgets.QListWidgetItem(str(app[4]) + ",  " + str(app[5]) )
            item_Description = QtWidgets.QListWidgetItem(str(app[3]))
            #textSkills = ui.SkillsParser(app[5])
            #matchedSkills = ui.SkillMatchChecker(textSkills)
            #print(matchedSkills)
            appFont = QtGui.QFont()
            appFont.setBold(True)
            appFont.setWeight(75)
            appFont.setPointSize(24)
            item_App.setFont(appFont)
            r = 174
            g = 194
            b = 221
            item_App.setBackground(QColor(r,g,b))
            appListview.addItem(item_App)

            locFont = QtGui.QFont()
            locFont.setBold(True)
            locFont.setWeight(75)
            locFont.setPointSize(14)
                   
                  
            item_Location.setBackground(QColor(r,g,b))
            item_Location.setFont(locFont)

            appListview.addItem(item_Location)
            appListview.addItem(item_Description)





    def removeButton(self):

        items = ui.myApplicationsListView.selectedItems()
        print(items)
        if(len(items) != 0):
            for i in range(len(items)):
                print(items[i].text())
                items[i].text()
                companyText = ""
                jobtitleText = ""
                linereader = ""
                commaReached = False
                applicationText = items[i].text()
                for x in range(len(applicationText)):
                    if (applicationText[x] == ","):
                        companyText = linereader
                        linereader = ""



                    else:
                        linereader = linereader + applicationText[x]

                jobtitleText = linereader
                jobtitleText = jobtitleText.strip(" ")
                companyText = str(companyText)
                jobtitleText = str(jobtitleText)

                print(jobtitleText)

                dbConnection.DeleteJob(companyText, jobtitleText)
                toRemove = items[i]
                items.remove(toRemove)

            print("record removed")
        else:
            print("Nothing to be removed!")

    def add_list_emp(self):
        text = self.edit_emp.text()
        if len(text) > 0:
            self.list_emp.addItem(text)
        else:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', 'empty!')
            msg_box.exec_()

    def list_emp_rightMenuShow(self, point):
        def DeleteItem():
            print(self.list_emp.currentRow())
            a = self.list_emp.takeItem(self.list_emp.currentRow())
            print(a)

        if self.list_emp.currentRow() >= 0:
            menu = QMenu()
            delAct = QAction("Delete")
            delAct.triggered.connect(DeleteItem)
            menu.addAction(delAct)
            menu.exec_(QCursor.pos())

    def add_list_sec(self):
        text = self.edit_sec.text()
        if len(text) > 0:
            self.list_sec.addItem(text)
        else:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', 'empty!')
            msg_box.exec_()

    def list_sec_rightMenuShow(self, point):
        def DeleteItem():
            print(self.list_sec.currentRow())
            a = self.list_sec.takeItem(self.list_sec.currentRow())
            print(a)

        if self.list_sec.currentRow() >= 0:
            menu = QMenu()
            delAct = QAction("Delete")
            delAct.triggered.connect(DeleteItem)
            menu.addAction(delAct)
            menu.exec_(QCursor.pos())

    def add_list_job(self):
        text = self.edit_job.text()
        if len(text) > 0:
            self.list_job.addItem(text)
        else:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', 'empty!')
            msg_box.exec_()

    def list_job_rightMenuShow(self, point):
        def DeleteItem():
            print(self.list_job.currentRow())
            a = self.list_job.takeItem(self.list_job.currentRow())
            print(a)

        if self.list_job.currentRow() >= 0:
            menu = QMenu()
            delAct = QAction("Delete")
            delAct.triggered.connect(DeleteItem)
            menu.addAction(delAct)
            menu.exec_(QCursor.pos())

    def add_list_int(self):
        text = self.edit_int.text()
        if len(text) > 0:
            self.list_int.addItem(text)
        else:
            msg_box = QMessageBox(QMessageBox.Warning, 'Warning', 'empty!')
            msg_box.exec_()

    def list_int_rightMenuShow(self, point):
        def DeleteItem():
            print(self.list_int.currentRow())
            a = self.list_int.takeItem(self.list_int.currentRow())
            print(a)

        if self.list_int.currentRow() >= 0:
            menu = QMenu()
            delAct = QAction("Delete")
            delAct.triggered.connect(DeleteItem)
            menu.addAction(delAct)
            menu.exec_(QCursor.pos())

def Start():
    m = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    m.show()
    return m,ui

        
if __name__ == "__main__":
    import sys

    dbConnection.create_connection(db_file)
    # List = [0,1,0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
    # dbConnection.AddJob(List, "Amazon", "Senior Data Analyst", "Lots of numbers.", "Cardiff")
    app = QtWidgets.QApplication(sys.argv)
    MainWindow,ui = Start()
    #MainWindow = QtWidgets.QMainWindow()
    ui.setupUi(MainWindow)
    ui.addAppToListview(ui.myApplicationsListView)
    MainWindow.show()
    sys.exit(app.exec_())